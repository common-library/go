# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

env:
  GEMINI_MODEL: ${{ secrets.GEMINI_MODEL }}
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
  DYNAMODB_URL: http://127.0.0.1:8000
  S3_URL: http://127.0.0.1:9090
  ELASTICSEARCH_ADDRESS_V7: http://:19200
  ELASTICSEARCH_ADDRESS_V8: http://:29200
  MONGODB_ADDRESS: :27017
  PROMETHEUS_ADDRESS: :9095
  REDIS_ADDRESS: :6379
  CLICKHOUSE_DSN: clickhouse://default:@127.0.0.1:19000
  MYSQL_DSN: root:root@tcp(127.0.0.1)/
  POSTGRESQL_DSN: host=localhost port=5432 user=postgres password=postgres sslmode=disable

jobs:
  build:
    strategy:
      matrix:
        runner: [ 'ubuntu-24.04' ]
        go: [ '1.23.0', '1.23.1' ]
        dynamodb-local: [ '2.5.2' ]
        s3mock: [ '3.10.0' ]
        elasticsearch-v7: [ '7.17.24' ]
        elasticsearch-v8: [ '8.15.1' ]
        mongo: [ '7.0.14' ]
        redis: [ '7.4.0-alpine' ]
        clickhouse: [ '24.8.4.13-alpine' ]
        mysql: [ '9.0.1' ]
        postgres: [ '16.4-alpine' ]
        prometheus: [ '2.54.1' ]

    runs-on: ${{ matrix.runner }}

    name: ${{ matrix.runner }}, golang:${{ matrix.go }}, amazon/dynamodb-local:${{ matrix.dynamodb-local }}, adobe/s3mock:${{ matrix.s3mock }}, elasticsearch:${{ matrix.elasticsearch-v7 }}, elasticsearch:${{ matrix.elasticsearch-v8 }}, mongo:${{ matrix.mongo }}, redis:${{ matrix.redis }}, clickhouse/clickhouse-server:${{ matrix.clickhouse }}, mysql:${{ matrix.mysql }}, postgres:${{ matrix.postgres }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker
        uses: crazy-max/ghaction-setup-docker@v3

      - name: Cache Docker images.
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-image-cache-${{ runner.os }}-amazon/dynamodb-local:${{ matrix.dynamodb-local }}-adobe/s3mock:${{ matrix.s3mock }}-elasticsearch:${{ matrix.elasticsearch-v7 }}-elasticsearch:${{ matrix.elasticsearch-v8 }}-mongo:${{ matrix.mongo }}-redis:${{ matrix.redis }}-clickhouse/clickhouse-server:${{ matrix.clickhouse }}-mysql:${{ matrix.mysql }}-postgres:${{ matrix.postgres }}

      - name: Run docker container
        run: |
          docker run --name dynamodb --detach --publish 8000:8000 --env "-jar DynamoDBLocal.jar -sharedDb -inMemory" amazon/dynamodb-local:${{ matrix.dynamodb-local }}
          docker run --name s3mock --detach --publish 9090:9090 -p 9191:9191 adobe/s3mock:${{ matrix.s3mock }}
          docker run --name elasticsearch-v7 --detach --publish 19200:9200 -p 19300:9300 --env discovery.type=single-node --env ES_JAVA_OPTS="-Xms500m -Xmx500m" elasticsearch:${{ matrix.elasticsearch-v7 }}
          docker network create elastic
          docker run --name elasticsearch-v8 --net elastic --detach --publish 29200:9200 -p 29300:9300 --env discovery.type=single-node --env ES_JAVA_OPTS="-Xms500m -Xmx500m" --env xpack.security.enabled=false elasticsearch:${{ matrix.elasticsearch-v8 }}
          docker run --name mongodb --detach --publish 27017:27017 mongo:${{ matrix.mongo }}
          docker run --name redis --detach --publish 6379:6379 redis:${{ matrix.redis }}
          docker run --name clickhouse --detach --publish 19000:9000 --ulimit nofile=262144:262144 clickhouse/clickhouse-server:${{ matrix.clickhouse }}
          docker run --name mysql --detach --publish 3306:3306 --env MYSQL_ROOT_PASSWORD=root mysql:${{ matrix.mysql }}
          docker run --name postgres --detach --publish 5432:5432 --env POSTGRES_PASSWORD=postgres postgres:${{ matrix.postgres }}

      - name: Wait
        run: sleep 10s
        shell: bash

      - name: Prepare for Prometheus
        uses: mikefarah/yq@v4
        with:
          cmd: |
            wget https://github.com/prometheus/prometheus/releases/download/v${{ matrix.prometheus }}/prometheus-${{ matrix.prometheus }}.linux-amd64.tar.gz
            tar xvzf prometheus-${{ matrix.prometheus }}.linux-amd64.tar.gz
            cd prometheus-${{ matrix.prometheus }}.linux-amd64
            yq -i '.scrape_configs[0].static_configs[0].targets = ["${{ env.PROMETHEUS_ADDRESS }}"]' prometheus.yml

      - name: Run Prometheus
        run: |
          cd prometheus-${{ matrix.prometheus }}.linux-amd64
          ./prometheus --config.file=prometheus.yml --web.listen-address=${{ env.PROMETHEUS_ADDRESS }} &
        shell: bash

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache-dependency-path: |
            go.sum

      - name: Test
        run: go clean -testcache && go test -coverprofile=coverage.out -cover ./...

      - name: Coverage
        run: go tool cover -html=./coverage.out -o ./coverage.html

      - name: Stop docker container
        run: |
          docker stop dynamodb s3mock elasticsearch-v7 elasticsearch-v8 mongodb redis clickhouse mysql postgres

      - name: Remove docker container
        run: |
          docker rm dynamodb s3mock elasticsearch-v7 elasticsearch-v8 mongodb redis clickhouse mysql postgres
          docker network rm elastic

      - name: Prune docker
        run: |
          docker volume prune -f
