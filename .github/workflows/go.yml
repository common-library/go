# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.1'

    - name: Docker Setup Docker
      uses: crazy-max/ghaction-setup-docker@v2.0.0

    - name: Run docker image
      run: |
        docker run --name dynamodb -d -p 8000:8000 -e "-jar DynamoDBLocal.jar -sharedDb -inMemory" amazon/dynamodb-local:2.0.0
        docker run --name elasticsearch-v7 -d -p 19200:9200 -p 19300:9300 -e discovery.type=single-node -e ES_JAVA_OPTS="-Xms500m -Xmx500m" elasticsearch:7.17.10
        docker network create elastic
        docker run --name elasticsearch-v8 --net elastic -d -p 29200:9200 -p 29300:9300 -e discovery.type=single-node -e ES_JAVA_OPTS="-Xms500m -Xmx500m" -e xpack.security.enabled=false elasticsearch:8.8.1
        docker run --name mongodb -d -p 27017:27017 mongo:6.0.8
        docker run --name mysql -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root mysql:8.0.33
        docker run --name redis -d -p 6379:6379 redis:7.0.12
        docker run --name s3mock -d -p 9090:9090 -p 9191:9191 adobe/s3mock:3.1.0

    - name: Test
      run: go clean -testcache && go test -coverprofile=coverage.out -cover ./...

    - name: Coverage
      run: go tool cover -html=./coverage.out -o ./coverage.html
