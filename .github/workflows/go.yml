# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go: [ '1.22.0', '1.22.1', '1.22.2' ]

    name: Go ${{ matrix.go }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}

    - name: Docker Setup Docker
      uses: crazy-max/ghaction-setup-docker@v3.1.0

    - name: Run docker image
      run: |
        docker run --name dynamodb --detach --publish 8000:8000 --env "-jar DynamoDBLocal.jar -sharedDb -inMemory" amazon/dynamodb-local:2.3.0
        docker run --name s3mock --detach --publish 9090:9090 -p 9191:9191 adobe/s3mock:3.5.2
        docker run --name elasticsearch-v7 --detach --publish 19200:9200 -p 19300:9300 --env discovery.type=single-node --env ES_JAVA_OPTS="-Xms500m -Xmx500m" elasticsearch:7.17.18
        docker network create elastic
        docker run --name elasticsearch-v8 --net elastic --detach --publish 29200:9200 -p 29300:9300 --env discovery.type=single-node --env ES_JAVA_OPTS="-Xms500m -Xmx500m" --env xpack.security.enabled=false elasticsearch:8.12.2
        docker run --name mongodb --detach --publish 27017:27017 mongo:7.0.7
        docker run --name mysql --detach --publish 3306:3306 --env MYSQL_ROOT_PASSWORD=root mysql:8.3.0
        docker run --name redis --detach --publish 6379:6379 redis:7.2.4

    - name: Sleep for 20 seconds
      run: sleep 20s
      shell: bash

    - name: Test
      run: go clean -testcache && go test -coverprofile=coverage.out -cover ./...

    - name: Coverage
      run: go tool cover -html=./coverage.out -o ./coverage.html
