// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// IssueForEntsColumns holds the columns for the "issue_for_ents" table.
	IssueForEntsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "repository_for_ent_issue_for_ents", Type: field.TypeInt, Nullable: true},
	}
	// IssueForEntsTable holds the schema information for the "issue_for_ents" table.
	IssueForEntsTable = &schema.Table{
		Name:       "issue_for_ents",
		Columns:    IssueForEntsColumns,
		PrimaryKey: []*schema.Column{IssueForEntsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "issue_for_ents_repository_for_ents_issue_for_ents",
				Columns:    []*schema.Column{IssueForEntsColumns[1]},
				RefColumns: []*schema.Column{RepositoryForEntsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RepositoryForEntsColumns holds the columns for the "repository_for_ents" table.
	RepositoryForEntsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// RepositoryForEntsTable holds the schema information for the "repository_for_ents" table.
	RepositoryForEntsTable = &schema.Table{
		Name:       "repository_for_ents",
		Columns:    RepositoryForEntsColumns,
		PrimaryKey: []*schema.Column{RepositoryForEntsColumns[0]},
	}
	// Table01forEntsColumns holds the columns for the "table01for_ents" table.
	Table01forEntsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "common_field01", Type: field.TypeInt, Nullable: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "field01", Type: field.TypeString, Unique: true},
		{Name: "field02", Type: field.TypeInt},
		{Name: "field03", Type: field.TypeBool, Default: false},
		{Name: "field04", Type: field.TypeEnum, Enums: []string{"value01", "value02"}, Default: "value01"},
		{Name: "field05", Type: field.TypeString, Nullable: true},
		{Name: "field06", Type: field.TypeString, Nullable: true},
		{Name: "field07", Type: field.TypeInt64},
		{Name: "field08", Type: field.TypeFloat64, Default: 1, SchemaType: map[string]string{"mysql": "decimal(6,2)", "postgres": "numeric"}},
		{Name: "field09", Type: field.TypeString, Default: "Field"},
		{Name: "field10", Type: field.TypeString, Nullable: true},
		{Name: "field11", Type: field.TypeString, Nullable: true},
		{Name: "field12", Type: field.TypeString, Nullable: true, Comment: "comment"},
		{Name: "field13", Type: field.TypeString, Nullable: true},
		{Name: "storage_key", Type: field.TypeString, Nullable: true},
		{Name: "field15", Type: field.TypeString, Nullable: true},
	}
	// Table01forEntsTable holds the schema information for the "table01for_ents" table.
	Table01forEntsTable = &schema.Table{
		Name:       "table01for_ents",
		Columns:    Table01forEntsColumns,
		PrimaryKey: []*schema.Column{Table01forEntsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "table01forent_field01_field07",
				Unique:  true,
				Columns: []*schema.Column{Table01forEntsColumns[4], Table01forEntsColumns[10]},
			},
			{
				Name:    "table01forent_field02_field03",
				Unique:  false,
				Columns: []*schema.Column{Table01forEntsColumns[5], Table01forEntsColumns[6]},
			},
		},
	}
	// UserForEntsColumns holds the columns for the "user_for_ents" table.
	UserForEntsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// UserForEntsTable holds the schema information for the "user_for_ents" table.
	UserForEntsTable = &schema.Table{
		Name:       "user_for_ents",
		Columns:    UserForEntsColumns,
		PrimaryKey: []*schema.Column{UserForEntsColumns[0]},
	}
	// RepositoryForEntUserForEntsColumns holds the columns for the "repository_for_ent_user_for_ents" table.
	RepositoryForEntUserForEntsColumns = []*schema.Column{
		{Name: "repository_for_ent_id", Type: field.TypeInt},
		{Name: "user_for_ent_id", Type: field.TypeInt},
	}
	// RepositoryForEntUserForEntsTable holds the schema information for the "repository_for_ent_user_for_ents" table.
	RepositoryForEntUserForEntsTable = &schema.Table{
		Name:       "repository_for_ent_user_for_ents",
		Columns:    RepositoryForEntUserForEntsColumns,
		PrimaryKey: []*schema.Column{RepositoryForEntUserForEntsColumns[0], RepositoryForEntUserForEntsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "repository_for_ent_user_for_ents_repository_for_ent_id",
				Columns:    []*schema.Column{RepositoryForEntUserForEntsColumns[0]},
				RefColumns: []*schema.Column{RepositoryForEntsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "repository_for_ent_user_for_ents_user_for_ent_id",
				Columns:    []*schema.Column{RepositoryForEntUserForEntsColumns[1]},
				RefColumns: []*schema.Column{UserForEntsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		IssueForEntsTable,
		RepositoryForEntsTable,
		Table01forEntsTable,
		UserForEntsTable,
		RepositoryForEntUserForEntsTable,
	}
)

func init() {
	IssueForEntsTable.ForeignKeys[0].RefTable = RepositoryForEntsTable
	RepositoryForEntUserForEntsTable.ForeignKeys[0].RefTable = RepositoryForEntsTable
	RepositoryForEntUserForEntsTable.ForeignKeys[1].RefTable = UserForEntsTable
}
