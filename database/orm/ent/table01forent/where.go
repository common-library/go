// Code generated by ent, DO NOT EDIT.

package table01forent

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/common-library/go/database/orm/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldID, id))
}

// CommonField01 applies equality check predicate on the "common_field01" field. It's identical to CommonField01EQ.
func CommonField01(v int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldCommonField01, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldUpdateTime, v))
}

// Field01 applies equality check predicate on the "field01" field. It's identical to Field01EQ.
func Field01(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField01, v))
}

// Field02 applies equality check predicate on the "field02" field. It's identical to Field02EQ.
func Field02(v int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField02, v))
}

// Field03 applies equality check predicate on the "field03" field. It's identical to Field03EQ.
func Field03(v bool) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField03, v))
}

// Field05 applies equality check predicate on the "field05" field. It's identical to Field05EQ.
func Field05(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField05, v))
}

// Field06 applies equality check predicate on the "field06" field. It's identical to Field06EQ.
func Field06(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField06, v))
}

// Field07 applies equality check predicate on the "field07" field. It's identical to Field07EQ.
func Field07(v int64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField07, v))
}

// Field08 applies equality check predicate on the "field08" field. It's identical to Field08EQ.
func Field08(v float64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField08, v))
}

// Field09 applies equality check predicate on the "field09" field. It's identical to Field09EQ.
func Field09(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField09, v))
}

// Field10 applies equality check predicate on the "field10" field. It's identical to Field10EQ.
func Field10(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField10, v))
}

// Field11 applies equality check predicate on the "field11" field. It's identical to Field11EQ.
func Field11(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField11, v))
}

// Field12 applies equality check predicate on the "field12" field. It's identical to Field12EQ.
func Field12(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField12, v))
}

// Field13 applies equality check predicate on the "field13" field. It's identical to Field13EQ.
func Field13(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField13, v))
}

// Field14 applies equality check predicate on the "field14" field. It's identical to Field14EQ.
func Field14(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField14, v))
}

// Field15 applies equality check predicate on the "field15" field. It's identical to Field15EQ.
func Field15(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField15, v))
}

// CommonField01EQ applies the EQ predicate on the "common_field01" field.
func CommonField01EQ(v int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldCommonField01, v))
}

// CommonField01NEQ applies the NEQ predicate on the "common_field01" field.
func CommonField01NEQ(v int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldCommonField01, v))
}

// CommonField01In applies the In predicate on the "common_field01" field.
func CommonField01In(vs ...int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldCommonField01, vs...))
}

// CommonField01NotIn applies the NotIn predicate on the "common_field01" field.
func CommonField01NotIn(vs ...int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldCommonField01, vs...))
}

// CommonField01GT applies the GT predicate on the "common_field01" field.
func CommonField01GT(v int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldCommonField01, v))
}

// CommonField01GTE applies the GTE predicate on the "common_field01" field.
func CommonField01GTE(v int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldCommonField01, v))
}

// CommonField01LT applies the LT predicate on the "common_field01" field.
func CommonField01LT(v int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldCommonField01, v))
}

// CommonField01LTE applies the LTE predicate on the "common_field01" field.
func CommonField01LTE(v int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldCommonField01, v))
}

// CommonField01IsNil applies the IsNil predicate on the "common_field01" field.
func CommonField01IsNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIsNull(FieldCommonField01))
}

// CommonField01NotNil applies the NotNil predicate on the "common_field01" field.
func CommonField01NotNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotNull(FieldCommonField01))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldUpdateTime, v))
}

// Field01EQ applies the EQ predicate on the "field01" field.
func Field01EQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField01, v))
}

// Field01NEQ applies the NEQ predicate on the "field01" field.
func Field01NEQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField01, v))
}

// Field01In applies the In predicate on the "field01" field.
func Field01In(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldField01, vs...))
}

// Field01NotIn applies the NotIn predicate on the "field01" field.
func Field01NotIn(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldField01, vs...))
}

// Field01GT applies the GT predicate on the "field01" field.
func Field01GT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldField01, v))
}

// Field01GTE applies the GTE predicate on the "field01" field.
func Field01GTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldField01, v))
}

// Field01LT applies the LT predicate on the "field01" field.
func Field01LT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldField01, v))
}

// Field01LTE applies the LTE predicate on the "field01" field.
func Field01LTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldField01, v))
}

// Field01Contains applies the Contains predicate on the "field01" field.
func Field01Contains(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContains(FieldField01, v))
}

// Field01HasPrefix applies the HasPrefix predicate on the "field01" field.
func Field01HasPrefix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasPrefix(FieldField01, v))
}

// Field01HasSuffix applies the HasSuffix predicate on the "field01" field.
func Field01HasSuffix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasSuffix(FieldField01, v))
}

// Field01EqualFold applies the EqualFold predicate on the "field01" field.
func Field01EqualFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEqualFold(FieldField01, v))
}

// Field01ContainsFold applies the ContainsFold predicate on the "field01" field.
func Field01ContainsFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContainsFold(FieldField01, v))
}

// Field02EQ applies the EQ predicate on the "field02" field.
func Field02EQ(v int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField02, v))
}

// Field02NEQ applies the NEQ predicate on the "field02" field.
func Field02NEQ(v int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField02, v))
}

// Field02In applies the In predicate on the "field02" field.
func Field02In(vs ...int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldField02, vs...))
}

// Field02NotIn applies the NotIn predicate on the "field02" field.
func Field02NotIn(vs ...int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldField02, vs...))
}

// Field02GT applies the GT predicate on the "field02" field.
func Field02GT(v int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldField02, v))
}

// Field02GTE applies the GTE predicate on the "field02" field.
func Field02GTE(v int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldField02, v))
}

// Field02LT applies the LT predicate on the "field02" field.
func Field02LT(v int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldField02, v))
}

// Field02LTE applies the LTE predicate on the "field02" field.
func Field02LTE(v int) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldField02, v))
}

// Field03EQ applies the EQ predicate on the "field03" field.
func Field03EQ(v bool) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField03, v))
}

// Field03NEQ applies the NEQ predicate on the "field03" field.
func Field03NEQ(v bool) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField03, v))
}

// Field04EQ applies the EQ predicate on the "field04" field.
func Field04EQ(v Field04) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField04, v))
}

// Field04NEQ applies the NEQ predicate on the "field04" field.
func Field04NEQ(v Field04) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField04, v))
}

// Field04In applies the In predicate on the "field04" field.
func Field04In(vs ...Field04) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldField04, vs...))
}

// Field04NotIn applies the NotIn predicate on the "field04" field.
func Field04NotIn(vs ...Field04) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldField04, vs...))
}

// Field05EQ applies the EQ predicate on the "field05" field.
func Field05EQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField05, v))
}

// Field05NEQ applies the NEQ predicate on the "field05" field.
func Field05NEQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField05, v))
}

// Field05In applies the In predicate on the "field05" field.
func Field05In(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldField05, vs...))
}

// Field05NotIn applies the NotIn predicate on the "field05" field.
func Field05NotIn(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldField05, vs...))
}

// Field05GT applies the GT predicate on the "field05" field.
func Field05GT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldField05, v))
}

// Field05GTE applies the GTE predicate on the "field05" field.
func Field05GTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldField05, v))
}

// Field05LT applies the LT predicate on the "field05" field.
func Field05LT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldField05, v))
}

// Field05LTE applies the LTE predicate on the "field05" field.
func Field05LTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldField05, v))
}

// Field05Contains applies the Contains predicate on the "field05" field.
func Field05Contains(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContains(FieldField05, v))
}

// Field05HasPrefix applies the HasPrefix predicate on the "field05" field.
func Field05HasPrefix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasPrefix(FieldField05, v))
}

// Field05HasSuffix applies the HasSuffix predicate on the "field05" field.
func Field05HasSuffix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasSuffix(FieldField05, v))
}

// Field05IsNil applies the IsNil predicate on the "field05" field.
func Field05IsNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIsNull(FieldField05))
}

// Field05NotNil applies the NotNil predicate on the "field05" field.
func Field05NotNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotNull(FieldField05))
}

// Field05EqualFold applies the EqualFold predicate on the "field05" field.
func Field05EqualFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEqualFold(FieldField05, v))
}

// Field05ContainsFold applies the ContainsFold predicate on the "field05" field.
func Field05ContainsFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContainsFold(FieldField05, v))
}

// Field06EQ applies the EQ predicate on the "field06" field.
func Field06EQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField06, v))
}

// Field06NEQ applies the NEQ predicate on the "field06" field.
func Field06NEQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField06, v))
}

// Field06In applies the In predicate on the "field06" field.
func Field06In(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldField06, vs...))
}

// Field06NotIn applies the NotIn predicate on the "field06" field.
func Field06NotIn(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldField06, vs...))
}

// Field06GT applies the GT predicate on the "field06" field.
func Field06GT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldField06, v))
}

// Field06GTE applies the GTE predicate on the "field06" field.
func Field06GTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldField06, v))
}

// Field06LT applies the LT predicate on the "field06" field.
func Field06LT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldField06, v))
}

// Field06LTE applies the LTE predicate on the "field06" field.
func Field06LTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldField06, v))
}

// Field06Contains applies the Contains predicate on the "field06" field.
func Field06Contains(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContains(FieldField06, v))
}

// Field06HasPrefix applies the HasPrefix predicate on the "field06" field.
func Field06HasPrefix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasPrefix(FieldField06, v))
}

// Field06HasSuffix applies the HasSuffix predicate on the "field06" field.
func Field06HasSuffix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasSuffix(FieldField06, v))
}

// Field06IsNil applies the IsNil predicate on the "field06" field.
func Field06IsNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIsNull(FieldField06))
}

// Field06NotNil applies the NotNil predicate on the "field06" field.
func Field06NotNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotNull(FieldField06))
}

// Field06EqualFold applies the EqualFold predicate on the "field06" field.
func Field06EqualFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEqualFold(FieldField06, v))
}

// Field06ContainsFold applies the ContainsFold predicate on the "field06" field.
func Field06ContainsFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContainsFold(FieldField06, v))
}

// Field07EQ applies the EQ predicate on the "field07" field.
func Field07EQ(v int64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField07, v))
}

// Field07NEQ applies the NEQ predicate on the "field07" field.
func Field07NEQ(v int64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField07, v))
}

// Field07In applies the In predicate on the "field07" field.
func Field07In(vs ...int64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldField07, vs...))
}

// Field07NotIn applies the NotIn predicate on the "field07" field.
func Field07NotIn(vs ...int64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldField07, vs...))
}

// Field07GT applies the GT predicate on the "field07" field.
func Field07GT(v int64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldField07, v))
}

// Field07GTE applies the GTE predicate on the "field07" field.
func Field07GTE(v int64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldField07, v))
}

// Field07LT applies the LT predicate on the "field07" field.
func Field07LT(v int64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldField07, v))
}

// Field07LTE applies the LTE predicate on the "field07" field.
func Field07LTE(v int64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldField07, v))
}

// Field08EQ applies the EQ predicate on the "field08" field.
func Field08EQ(v float64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField08, v))
}

// Field08NEQ applies the NEQ predicate on the "field08" field.
func Field08NEQ(v float64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField08, v))
}

// Field08In applies the In predicate on the "field08" field.
func Field08In(vs ...float64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldField08, vs...))
}

// Field08NotIn applies the NotIn predicate on the "field08" field.
func Field08NotIn(vs ...float64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldField08, vs...))
}

// Field08GT applies the GT predicate on the "field08" field.
func Field08GT(v float64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldField08, v))
}

// Field08GTE applies the GTE predicate on the "field08" field.
func Field08GTE(v float64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldField08, v))
}

// Field08LT applies the LT predicate on the "field08" field.
func Field08LT(v float64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldField08, v))
}

// Field08LTE applies the LTE predicate on the "field08" field.
func Field08LTE(v float64) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldField08, v))
}

// Field09EQ applies the EQ predicate on the "field09" field.
func Field09EQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField09, v))
}

// Field09NEQ applies the NEQ predicate on the "field09" field.
func Field09NEQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField09, v))
}

// Field09In applies the In predicate on the "field09" field.
func Field09In(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldField09, vs...))
}

// Field09NotIn applies the NotIn predicate on the "field09" field.
func Field09NotIn(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldField09, vs...))
}

// Field09GT applies the GT predicate on the "field09" field.
func Field09GT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldField09, v))
}

// Field09GTE applies the GTE predicate on the "field09" field.
func Field09GTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldField09, v))
}

// Field09LT applies the LT predicate on the "field09" field.
func Field09LT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldField09, v))
}

// Field09LTE applies the LTE predicate on the "field09" field.
func Field09LTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldField09, v))
}

// Field09Contains applies the Contains predicate on the "field09" field.
func Field09Contains(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContains(FieldField09, v))
}

// Field09HasPrefix applies the HasPrefix predicate on the "field09" field.
func Field09HasPrefix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasPrefix(FieldField09, v))
}

// Field09HasSuffix applies the HasSuffix predicate on the "field09" field.
func Field09HasSuffix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasSuffix(FieldField09, v))
}

// Field09EqualFold applies the EqualFold predicate on the "field09" field.
func Field09EqualFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEqualFold(FieldField09, v))
}

// Field09ContainsFold applies the ContainsFold predicate on the "field09" field.
func Field09ContainsFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContainsFold(FieldField09, v))
}

// Field10EQ applies the EQ predicate on the "field10" field.
func Field10EQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField10, v))
}

// Field10NEQ applies the NEQ predicate on the "field10" field.
func Field10NEQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField10, v))
}

// Field10In applies the In predicate on the "field10" field.
func Field10In(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldField10, vs...))
}

// Field10NotIn applies the NotIn predicate on the "field10" field.
func Field10NotIn(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldField10, vs...))
}

// Field10GT applies the GT predicate on the "field10" field.
func Field10GT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldField10, v))
}

// Field10GTE applies the GTE predicate on the "field10" field.
func Field10GTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldField10, v))
}

// Field10LT applies the LT predicate on the "field10" field.
func Field10LT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldField10, v))
}

// Field10LTE applies the LTE predicate on the "field10" field.
func Field10LTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldField10, v))
}

// Field10Contains applies the Contains predicate on the "field10" field.
func Field10Contains(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContains(FieldField10, v))
}

// Field10HasPrefix applies the HasPrefix predicate on the "field10" field.
func Field10HasPrefix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasPrefix(FieldField10, v))
}

// Field10HasSuffix applies the HasSuffix predicate on the "field10" field.
func Field10HasSuffix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasSuffix(FieldField10, v))
}

// Field10IsNil applies the IsNil predicate on the "field10" field.
func Field10IsNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIsNull(FieldField10))
}

// Field10NotNil applies the NotNil predicate on the "field10" field.
func Field10NotNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotNull(FieldField10))
}

// Field10EqualFold applies the EqualFold predicate on the "field10" field.
func Field10EqualFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEqualFold(FieldField10, v))
}

// Field10ContainsFold applies the ContainsFold predicate on the "field10" field.
func Field10ContainsFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContainsFold(FieldField10, v))
}

// Field11EQ applies the EQ predicate on the "field11" field.
func Field11EQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField11, v))
}

// Field11NEQ applies the NEQ predicate on the "field11" field.
func Field11NEQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField11, v))
}

// Field11In applies the In predicate on the "field11" field.
func Field11In(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldField11, vs...))
}

// Field11NotIn applies the NotIn predicate on the "field11" field.
func Field11NotIn(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldField11, vs...))
}

// Field11GT applies the GT predicate on the "field11" field.
func Field11GT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldField11, v))
}

// Field11GTE applies the GTE predicate on the "field11" field.
func Field11GTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldField11, v))
}

// Field11LT applies the LT predicate on the "field11" field.
func Field11LT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldField11, v))
}

// Field11LTE applies the LTE predicate on the "field11" field.
func Field11LTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldField11, v))
}

// Field11Contains applies the Contains predicate on the "field11" field.
func Field11Contains(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContains(FieldField11, v))
}

// Field11HasPrefix applies the HasPrefix predicate on the "field11" field.
func Field11HasPrefix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasPrefix(FieldField11, v))
}

// Field11HasSuffix applies the HasSuffix predicate on the "field11" field.
func Field11HasSuffix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasSuffix(FieldField11, v))
}

// Field11IsNil applies the IsNil predicate on the "field11" field.
func Field11IsNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIsNull(FieldField11))
}

// Field11NotNil applies the NotNil predicate on the "field11" field.
func Field11NotNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotNull(FieldField11))
}

// Field11EqualFold applies the EqualFold predicate on the "field11" field.
func Field11EqualFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEqualFold(FieldField11, v))
}

// Field11ContainsFold applies the ContainsFold predicate on the "field11" field.
func Field11ContainsFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContainsFold(FieldField11, v))
}

// Field12EQ applies the EQ predicate on the "field12" field.
func Field12EQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField12, v))
}

// Field12NEQ applies the NEQ predicate on the "field12" field.
func Field12NEQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField12, v))
}

// Field12In applies the In predicate on the "field12" field.
func Field12In(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldField12, vs...))
}

// Field12NotIn applies the NotIn predicate on the "field12" field.
func Field12NotIn(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldField12, vs...))
}

// Field12GT applies the GT predicate on the "field12" field.
func Field12GT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldField12, v))
}

// Field12GTE applies the GTE predicate on the "field12" field.
func Field12GTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldField12, v))
}

// Field12LT applies the LT predicate on the "field12" field.
func Field12LT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldField12, v))
}

// Field12LTE applies the LTE predicate on the "field12" field.
func Field12LTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldField12, v))
}

// Field12Contains applies the Contains predicate on the "field12" field.
func Field12Contains(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContains(FieldField12, v))
}

// Field12HasPrefix applies the HasPrefix predicate on the "field12" field.
func Field12HasPrefix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasPrefix(FieldField12, v))
}

// Field12HasSuffix applies the HasSuffix predicate on the "field12" field.
func Field12HasSuffix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasSuffix(FieldField12, v))
}

// Field12IsNil applies the IsNil predicate on the "field12" field.
func Field12IsNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIsNull(FieldField12))
}

// Field12NotNil applies the NotNil predicate on the "field12" field.
func Field12NotNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotNull(FieldField12))
}

// Field12EqualFold applies the EqualFold predicate on the "field12" field.
func Field12EqualFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEqualFold(FieldField12, v))
}

// Field12ContainsFold applies the ContainsFold predicate on the "field12" field.
func Field12ContainsFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContainsFold(FieldField12, v))
}

// Field13EQ applies the EQ predicate on the "field13" field.
func Field13EQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField13, v))
}

// Field13NEQ applies the NEQ predicate on the "field13" field.
func Field13NEQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField13, v))
}

// Field13In applies the In predicate on the "field13" field.
func Field13In(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldField13, vs...))
}

// Field13NotIn applies the NotIn predicate on the "field13" field.
func Field13NotIn(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldField13, vs...))
}

// Field13GT applies the GT predicate on the "field13" field.
func Field13GT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldField13, v))
}

// Field13GTE applies the GTE predicate on the "field13" field.
func Field13GTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldField13, v))
}

// Field13LT applies the LT predicate on the "field13" field.
func Field13LT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldField13, v))
}

// Field13LTE applies the LTE predicate on the "field13" field.
func Field13LTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldField13, v))
}

// Field13Contains applies the Contains predicate on the "field13" field.
func Field13Contains(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContains(FieldField13, v))
}

// Field13HasPrefix applies the HasPrefix predicate on the "field13" field.
func Field13HasPrefix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasPrefix(FieldField13, v))
}

// Field13HasSuffix applies the HasSuffix predicate on the "field13" field.
func Field13HasSuffix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasSuffix(FieldField13, v))
}

// Field13IsNil applies the IsNil predicate on the "field13" field.
func Field13IsNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIsNull(FieldField13))
}

// Field13NotNil applies the NotNil predicate on the "field13" field.
func Field13NotNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotNull(FieldField13))
}

// Field13EqualFold applies the EqualFold predicate on the "field13" field.
func Field13EqualFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEqualFold(FieldField13, v))
}

// Field13ContainsFold applies the ContainsFold predicate on the "field13" field.
func Field13ContainsFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContainsFold(FieldField13, v))
}

// Field14EQ applies the EQ predicate on the "field14" field.
func Field14EQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField14, v))
}

// Field14NEQ applies the NEQ predicate on the "field14" field.
func Field14NEQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField14, v))
}

// Field14In applies the In predicate on the "field14" field.
func Field14In(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldField14, vs...))
}

// Field14NotIn applies the NotIn predicate on the "field14" field.
func Field14NotIn(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldField14, vs...))
}

// Field14GT applies the GT predicate on the "field14" field.
func Field14GT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldField14, v))
}

// Field14GTE applies the GTE predicate on the "field14" field.
func Field14GTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldField14, v))
}

// Field14LT applies the LT predicate on the "field14" field.
func Field14LT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldField14, v))
}

// Field14LTE applies the LTE predicate on the "field14" field.
func Field14LTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldField14, v))
}

// Field14Contains applies the Contains predicate on the "field14" field.
func Field14Contains(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContains(FieldField14, v))
}

// Field14HasPrefix applies the HasPrefix predicate on the "field14" field.
func Field14HasPrefix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasPrefix(FieldField14, v))
}

// Field14HasSuffix applies the HasSuffix predicate on the "field14" field.
func Field14HasSuffix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasSuffix(FieldField14, v))
}

// Field14IsNil applies the IsNil predicate on the "field14" field.
func Field14IsNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIsNull(FieldField14))
}

// Field14NotNil applies the NotNil predicate on the "field14" field.
func Field14NotNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotNull(FieldField14))
}

// Field14EqualFold applies the EqualFold predicate on the "field14" field.
func Field14EqualFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEqualFold(FieldField14, v))
}

// Field14ContainsFold applies the ContainsFold predicate on the "field14" field.
func Field14ContainsFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContainsFold(FieldField14, v))
}

// Field15EQ applies the EQ predicate on the "field15" field.
func Field15EQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEQ(FieldField15, v))
}

// Field15NEQ applies the NEQ predicate on the "field15" field.
func Field15NEQ(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNEQ(FieldField15, v))
}

// Field15In applies the In predicate on the "field15" field.
func Field15In(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIn(FieldField15, vs...))
}

// Field15NotIn applies the NotIn predicate on the "field15" field.
func Field15NotIn(vs ...string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotIn(FieldField15, vs...))
}

// Field15GT applies the GT predicate on the "field15" field.
func Field15GT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGT(FieldField15, v))
}

// Field15GTE applies the GTE predicate on the "field15" field.
func Field15GTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldGTE(FieldField15, v))
}

// Field15LT applies the LT predicate on the "field15" field.
func Field15LT(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLT(FieldField15, v))
}

// Field15LTE applies the LTE predicate on the "field15" field.
func Field15LTE(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldLTE(FieldField15, v))
}

// Field15Contains applies the Contains predicate on the "field15" field.
func Field15Contains(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContains(FieldField15, v))
}

// Field15HasPrefix applies the HasPrefix predicate on the "field15" field.
func Field15HasPrefix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasPrefix(FieldField15, v))
}

// Field15HasSuffix applies the HasSuffix predicate on the "field15" field.
func Field15HasSuffix(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldHasSuffix(FieldField15, v))
}

// Field15IsNil applies the IsNil predicate on the "field15" field.
func Field15IsNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldIsNull(FieldField15))
}

// Field15NotNil applies the NotNil predicate on the "field15" field.
func Field15NotNil() predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldNotNull(FieldField15))
}

// Field15EqualFold applies the EqualFold predicate on the "field15" field.
func Field15EqualFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldEqualFold(FieldField15, v))
}

// Field15ContainsFold applies the ContainsFold predicate on the "field15" field.
func Field15ContainsFold(v string) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.FieldContainsFold(FieldField15, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Table01ForEnt) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Table01ForEnt) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Table01ForEnt) predicate.Table01ForEnt {
	return predicate.Table01ForEnt(sql.NotPredicates(p))
}
